" Strip trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

""" Airline
" Always show buffer bar, with numbers for switching with :b <number>
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" Using buffers like tabs in a GUI editor
set hidden
nmap <leader>T :enew<cr>
nmap <leader>bq :bp <BAR> bd #<CR>
nmap <leader>bl :ls<CR>

""" The Silver Searcher (from Thoughtbot)
if executable('ag')
 " Use ag over grep
 set grepprg=ag\ --nogroup\ --nocolor

 " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
 let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

 " ag is fast enough that CtrlP doesn't need to cache
 let g:ctrlp_use_caching = 0
endif

command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!

""" CtrlP
let g:ctrlp_max_history = 0
let g:ctrlp_working_path_mode = 'w'
let g:ctrlp_max_files=0
let g:ctrlp_match_func = {'match' : 'matcher#cmatch' }

""" Keybinds
nnoremap <leader><leader> <c-^>
nnoremap <leader>q :Bdelete<CR>

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

""" iKnow-specific
nnoremap <leader>i :cd /data/iknow<CR>:CtrlP /data/iknow<CR>
nnoremap <leader>a :cd /data/smart_api<CR>:CtrlP /data/smart_api<CR>
nnoremap <leader>c :cd /data/smart_core<CR>:CtrlP /data/smart_core<CR>

""" Ruby
nnoremap <leader>g :execute "cd" . system("rvm gempath \| awk -F: '{print $1 \"/gems\"}' ") <CR>

""" Appearence and terminal settings
" Sync OS X (macOS?) clipboard
set clipboard=unnamed
" Dark themes are cool
colorscheme gruvbox
set background=dark
set t_ut=

" This disables all color in Prompt on iOS
if $TERM_PROGRAM == "iTerm.app"
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

""" Nerd Tree
let NERDTreeQuitOnOpen = 1

""" Multi cursor
" Stay in multiple cursor mode until canceled, for better movement
let g:multi_cursor_exit_from_insert_mode=0

""" Tabularize
if exists(":Tabularize")
  nmap <Leader>b= :Tabularize /=<CR>
  vmap <Leader>b= :Tabularize /=<CR>
  nmap <Leader>b: :Tabularize /:\zs<CR>
  vmap <Leader>b: :Tabularize /:\zs<CR>
endif


""" Terminal colors for neovim

if has('nvim')
  " dark0 + gray
  let g:terminal_color_0 = "#282828"
  let g:terminal_color_8 = "#928374"

  " neurtral_red + bright_red
  let g:terminal_color_1 = "#cc241d"
  let g:terminal_color_9 = "#fb4934"

  " neutral_green + bright_green
  let g:terminal_color_2 = "#98971a"
  let g:terminal_color_10 = "#b8bb26"

  " neutral_yellow + bright_yellow
  let g:terminal_color_3 = "#d79921"
  let g:terminal_color_11 = "#fabd2f"

  " neutral_blue + bright_blue
  let g:terminal_color_4 = "#458588"
  let g:terminal_color_12 = "#83a598"

  " neutral_purple + bright_purple
  let g:terminal_color_5 = "#b16286"
  let g:terminal_color_13 = "#d3869b"

  " neutral_aqua + faded_aqua
  let g:terminal_color_6 = "#689d6a"
  let g:terminal_color_14 = "#8ec07c"

  " light4 + light1
  let g:terminal_color_7 = "#a89984"
  let g:terminal_color_15 = "#ebdbb2"
endif

""" Split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <Tab> <C-W><C-W>
nnoremap <S-Tab> <C-W>W

set splitbelow
set splitright

""" Airline customization
let g:airline_section_b = '%{getcwd()}'
let g:airline_theme='distinguished'
let g:airline_detect_modified = 1
